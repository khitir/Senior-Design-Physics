###############################################
###
### This file is generated by txpp.
### Any changes to this file will be lost if the
### preprocessor is rerun.
###
### Input file : twoDTiltedPulsewithElectronsCOPY.pre
### Output file: twoDTiltedPulsewithElectronsCOPY.in
###
###############################################

nsteps = 20000
dumpPeriodicity = 250
dt = 3.156690514222667e-16
dimension = 2
floattype = double
verbosity = 127
copyHistoryAtEachDump = 0
useGridBndryRestore = True
constructUniverse = False

<Grid globalGrid>
  verbosity = 127
  numCells = [2048  428  12]
  lengths = [0.0002 0.0002 1.0]
  startPositions = [0.0 -0.0001 0.0]
</Grid>

<DomainDecomp decomp>
  periodicDirs = []
</DomainDecomp>

<RankDecomp rd>
  verbosity = 127
  maxNumDevices = 0
</RankDecomp>

<MultiField multiField>

  <Field E>
    numComponents = 3
    offset = edge
    kind = regular
    overlap = [1 1]
    labels = [E_x   E_y   E_z]
  </Field>

  <Field B>
    numComponents = 3
    offset = face
    kind = regular
    overlap = [1 1]
    labels = [B_x   B_y   B_z]
  </Field>

  <Field J>
    numComponents = 3
    offset = edge
    kind = depField
    overlap = [1 2]
    labels = [J_x   J_y   J_z]
  </Field>

  <Field nodalE>
    numComponents = 3
    offset = none
    kind = regular
    overlap = [1 2]
    labels = [nodalE_x   nodalE_y   nodalE_z]
  </Field>

  <Field nodalB>
    numComponents = 3
    offset = none
    kind = regular
    overlap = [1 2]
    labels = [nodalB_x   nodalB_y   nodalB_z]
  </Field>

  <FieldMultiUpdater boundaryLauncher01>
    kind = STFuncUpdater
    operation = set
    velOverC = -1.0
    lowerBounds = [0  0]
    upperBounds = [1  428]
    components = [1]
    writeFields = [E]

    <STFunc stFunc>
      kind = expression
      expression = ((1)*(((cos(((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0)))*(t-5e-14))*0.0001/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2))))*exp(-(y**2/((sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2))))**2*(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2)))*exp(-(0**2/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2))))**2))*1/sqrt(1+x**2/((2354564459136066.5*0.0001**2)/(2*299792458.0))**2)*(exp(-(((200000000000000.0/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2)))**2*((t-5e-14)-(-0.0*(2354564459136066.5-((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0))))+(1/(2*299792458.0))*(x/(x**2+((2354564459136066.5*0.0001**2)/(2*299792458.0))**2))*(0**2+(y+x*3.433538587117963e-16*(2354564459136066.5-((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0)))))**2-2*x*3.433538587117963e-16*(y+x*3.433538587117963e-16*(2354564459136066.5-((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0)))))*((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0))))+(1/299792458.0)*((y*3.433538587117963e-16+x*3.433538587117963e-16**2*(2354564459136066.5-((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0)))))*((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0)))+y*3.433538587117963e-16*(-(2354564459136066.5-((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0)))))+x*(1-0.5*3.433538587117963e-16**2*(-(2354564459136066.5-((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0)))))**2))))**2)/(4*(1+(200000000000000.0/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2)))**4*((1/(2*299792458.0))*(2*y*3.433538587117963e-16-2*(x/(x**2+((2354564459136066.5*0.0001**2)/(2*299792458.0))**2))*y*x*3.433538587117963e-16+299792458.0*0.0+2*x*3.433538587117963e-16**2*2354564459136066.5-2*(x/(x**2+((2354564459136066.5*0.0001**2)/(2*299792458.0))**2))*x**2*3.433538587117963e-16**2*2354564459136066.5-3*x*3.433538587117963e-16**2*((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0)))+3*(x/(x**2+((2354564459136066.5*0.0001**2)/(2*299792458.0))**2))*x**2*3.433538587117963e-16**2*((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0)))))**2))))*cos((((x/(x**2+((2354564459136066.5*0.0001**2)/(2*299792458.0))**2))*(0**2+(y+x*3.433538587117963e-16*(2354564459136066.5-((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0)))))**2)*((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0))))/(2*299792458.0)+0.5*0.0*(-2354564459136066.5+((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0))))**2+(1/299792458.0)*((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0)))*(y*3.433538587117963e-16*(-(2354564459136066.5-((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0)))))+x*(1-0.5*3.433538587117963e-16**2*(-(2354564459136066.5-((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0)))))**2)))-((200000000000000.0/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2)))**4*((t-5e-14)-(-0.0*(2354564459136066.5-((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0))))+(1/(2*299792458.0))*(x/(x**2+((2354564459136066.5*0.0001**2)/(2*299792458.0))**2))*(0**2+(y+x*3.433538587117963e-16*(2354564459136066.5-((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0)))))**2-2*x*3.433538587117963e-16*(y+x*3.433538587117963e-16*(2354564459136066.5-((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0)))))*((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0))))+(1/299792458.0)*((y*3.433538587117963e-16+x*3.433538587117963e-16**2*(2354564459136066.5-((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0)))))*((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0)))+y*3.433538587117963e-16*(-(2354564459136066.5-((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0)))))+x*(1-0.5*3.433538587117963e-16**2*(-(2354564459136066.5-((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0)))))**2))))**2*((1/(2*299792458.0))*(2*y*3.433538587117963e-16-2*(x/(x**2+((2354564459136066.5*0.0001**2)/(2*299792458.0))**2))*y*x*3.433538587117963e-16+299792458.0*0.0+2*x*3.433538587117963e-16**2*2354564459136066.5-2*(x/(x**2+((2354564459136066.5*0.0001**2)/(2*299792458.0))**2))*x**2*3.433538587117963e-16**2*2354564459136066.5-3*x*3.433538587117963e-16**2*((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0)))+3*(x/(x**2+((2354564459136066.5*0.0001**2)/(2*299792458.0))**2))*x**2*3.433538587117963e-16**2*((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0))))))/(4*(1+(200000000000000.0/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2)))**4*((1/(2*299792458.0))*(2*y*3.433538587117963e-16-2*(x/(x**2+((2354564459136066.5*0.0001**2)/(2*299792458.0))**2))*y*x*3.433538587117963e-16+299792458.0*0.0+2*x*3.433538587117963e-16**2*2354564459136066.5-2*(x/(x**2+((2354564459136066.5*0.0001**2)/(2*299792458.0))**2))*x**2*3.433538587117963e-16**2*2354564459136066.5-3*x*3.433538587117963e-16**2*((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0)))+3*(x/(x**2+((2354564459136066.5*0.0001**2)/(2*299792458.0))**2))*x**2*3.433538587117963e-16**2*((2354564459136066.5+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2))**2*y/(0.0001*200000000000000.0)))))**2))))*1/(2*sqrt(3.141592653589793)*sqrt(1/(200000000000000.0/(sqrt(1+((x*3.433538587117963e-16*200000000000000.0)/(sqrt(0.0001**2*(1+(x**2/(0.0001**2*2354564459136066.5/(2*299792458.0))**2)))))**2)))**2))))*((((t-5e-14)>0)*((t-5e-14)<2.6685127615852163e-15))*(sin(3.141592653589793*(t-5e-14)/(2*2.6685127615852163e-15))**2)+((t-5e-14)>=2.6685127615852163e-15)*1)))
    </STFunc>

  </FieldMultiUpdater>

  <FieldMultiUpdater boundaryLauncher02>
    kind = STFuncUpdater
    operation = set
    velOverC = -1.0
    lowerBounds = [0  0]
    upperBounds = [1  428]
    components = [2]
    writeFields = [E]

    <STFunc stFunc>
      kind = expression
      expression = 0.0
    </STFunc>

  </FieldMultiUpdater>

  <FieldUpdater malDDenomupperX>
    kind = malUpdater
    lowerBounds = [1946  0  0]
    upperBounds = [2049  428  12]
    upperOrLower = upper
    numOrDenom = denom
    writeField = E
    dir = 0
    frac = 0.5
    power = 3.0
  </FieldUpdater>

  <FieldUpdater malBDenomupperX>
    kind = malUpdater
    lowerBounds = [1946  0  0]
    upperBounds = [2049  428  12]
    upperOrLower = upper
    numOrDenom = denom
    writeField = B
    dir = 0
    frac = 0.5
    power = 3.0
  </FieldUpdater>

  <FieldMultiUpdater pec0>
    kind = STFuncUpdater
    operation = set
    lowerBounds = [0  0]
    upperBounds = [2048  1]
    components = [0  2]
    writeFields = [E]

    <STFunc stFunc>
      kind = expression
      expression = 0.0
    </STFunc>

  </FieldMultiUpdater>

  <FieldMultiUpdater pec1>
    kind = STFuncUpdater
    operation = set
    lowerBounds = [0  428]
    upperBounds = [2048  429]
    components = [0  2]
    writeFields = [E]

    <STFunc stFunc>
      kind = expression
      expression = 0.0
    </STFunc>

  </FieldMultiUpdater>

  <FieldMultiUpdater yeeAmpere>
    kind = yeeAmpereUpdater
    readFieldCompShifts = [0 0]
    components = [0 1 2]
    contractFromBottomInNonComponentDir = True
    readFields = [B J]
    writeFields = [E]
    lowerBounds = [0 0 0]
    upperBounds = [2048  428  12]
  </FieldMultiUpdater>

  <FieldMultiUpdater yeeFaraday>
    kind = yeeFaradayUpdater
    components = [0 1 2]
    expandToTopInComponentDir = 1
    lowerBounds = [0  0  0]
    upperBounds = [2048  428  12]
    readFields = [E]
    writeFields = [B]
  </FieldMultiUpdater>

  <FieldUpdater edgeToNode>
    kind = edgeToNodeVec
    lowerBounds = [0  0  0]
    upperBounds = [2049  429  13]
    readFields = [E]
    writeFields = [nodalE]
  </FieldUpdater>

  <FieldUpdater copyPerimlowerX>
    kind = unaryFieldOpUpdater
    minDim = 1
    lowerBounds = [0  0  0]
    upperBounds = [1  429  13]
    operation = set
    bumpReadIter = [0  0  0]
    readFields = [E]
    component = 0
    writeFields = [nodalE]

    <STFunc copyFunc>
      kind = constantFunc
      amplitude = 1.
    </STFunc>

  </FieldUpdater>

  <FieldUpdater copyPerimupperX>
    kind = unaryFieldOpUpdater
    minDim = 1
    lowerBounds = [2048  0  0]
    upperBounds = [2049  429  13]
    operation = set
    bumpReadIter = [-1  0  0]
    readFields = [E]
    component = 0
    writeFields = [nodalE]

    <STFunc copyFunc>
      kind = constantFunc
      amplitude = 1.
    </STFunc>

  </FieldUpdater>

  <FieldUpdater copyPerimlowerY>
    kind = unaryFieldOpUpdater
    minDim = 2
    lowerBounds = [0  0  0]
    upperBounds = [2049  1  13]
    operation = set
    bumpReadIter = [0  0  0]
    readFields = [E]
    component = 1
    writeFields = [nodalE]

    <STFunc copyFunc>
      kind = constantFunc
      amplitude = 1.
    </STFunc>

  </FieldUpdater>

  <FieldUpdater copyPerimupperY>
    kind = unaryFieldOpUpdater
    minDim = 2
    lowerBounds = [0  428  0]
    upperBounds = [2049  429  13]
    operation = set
    bumpReadIter = [0  -1  0]
    readFields = [E]
    component = 1
    writeFields = [nodalE]

    <STFunc copyFunc>
      kind = constantFunc
      amplitude = 1.
    </STFunc>

  </FieldUpdater>

  <FieldUpdater faceToNode>
    kind = faceToNodeVec
    lowerBounds = [0  0  0]
    upperBounds = [2049  429  13]
    readFields = [B]
    writeFields = [nodalB]
  </FieldUpdater>

  <UpdateStep boundaryLauncher0ElecBCStep>
    toDtFrac = 1.0
    updaters = [boundaryLauncher01 boundaryLauncher02]
    messageFields = [E]
  </UpdateStep>

  <UpdateStep pec0ElecBCStep>
    toDtFrac = 1.0
    updaters = [pec0]
    messageFields = [E]
  </UpdateStep>

  <UpdateStep pec1ElecBCStep>
    toDtFrac = 1.0
    updaters = [pec1]
    messageFields = [E]
  </UpdateStep>

  <UpdateStep ampereStep>
    toDtFrac = 1.0
    updaters = [yeeAmpere malDDenomupperX]
    messageFields = [E]
  </UpdateStep>

  <UpdateStep firstFaradayStep>
    toDtFrac = 0.5
    updaters = [yeeFaraday malBDenomupperX]
    messageFields = [B]
  </UpdateStep>

  <UpdateStep secondFaradayStep>
    toDtFrac = 1.0
    updaters = [yeeFaraday]
    messageFields = [B]
  </UpdateStep>

  <UpdateStep edgeToNodeStep>
    toDtFrac = 1.0
    updaters = [edgeToNode]
    messageFields = [nodalE]
  </UpdateStep>

  <UpdateStep copyPerimlowerXStep>
    toDtFrac = 1.0
    updaters = [copyPerimlowerX]
    messageFields = [nodalE]
  </UpdateStep>

  <UpdateStep copyPerimupperXStep>
    toDtFrac = 1.0
    updaters = [copyPerimupperX]
    messageFields = [nodalE]
  </UpdateStep>

  <UpdateStep copyPerimlowerYStep>
    toDtFrac = 1.0
    updaters = [copyPerimlowerY]
    messageFields = [nodalE]
  </UpdateStep>

  <UpdateStep copyPerimupperYStep>
    toDtFrac = 1.0
    updaters = [copyPerimupperY]
    messageFields = [nodalE]
  </UpdateStep>

  <UpdateStep faceToNodeStep>
    toDtFrac = 1.0
    updaters = [faceToNode]
    messageFields = [nodalB]
  </UpdateStep>

  updateStepOrder = [firstFaradayStep ampereStep pec1ElecBCStep pec0ElecBCStep boundaryLauncher0ElecBCStep secondFaradayStep edgeToNodeStep copyPerimlowerXStep copyPerimupperXStep copyPerimlowerYStep copyPerimupperYStep faceToNodeStep]
</MultiField>

<VectorDepositor JDep>
  kind = areaWeighting
  depField = multiField.J
</VectorDepositor>

<Species electrons0>
  kind = relBoris
  charge = -1.602176634e-19
  mass = 9.10938215e-31
  nominalDensity = 1.0
  nomPtclsPerCell = 1.0
  fields = [multiField.nodalE multiField.nodalB]
  currDeps = [JDep]

  <ParticleSource particleLoader0>
    kind = xvLoaderEmitter
    load = True
    loadAfterInit = False
    loadOnShift = False

    <STFunc relMacroDenFunc>
      kind = expression
      expression = 1.0
    </STFunc>

    <PositionGenerator posGen>
      kind = gridPosGen
      macroPerDir = [1  1  1]

      <Slab loadSlab>
        lowerBounds = [4e-05  0.0  0.0]
        upperBounds = [4.1953125e-05  4.6728971963e-07  0.0]
      </Slab>

      emitDirSign = 1
    </PositionGenerator>

    <VelocityGenerator velGen>
      kind = funcVelGen
      emitVelocityIsLocal = True

      <STFunc component0>
        kind = expression
        expression = 0.0
      </STFunc>

      <STFunc component1>
        kind = expression
        expression = 0.0
      </STFunc>

      <STFunc component2>
        kind = expression
        expression = 0.0
      </STFunc>

    </VelocityGenerator>

  </ParticleSource>

  <ParticleSink lower0Absorber>
    kind = absorber
    minDim = 1
    lowerBounds = [-1   -1   -1]
    upperBounds = [0   429   13]
  </ParticleSink>

  <ParticleSink upper0Absorber>
    kind = absorber
    minDim = 1
    lowerBounds = [2048   -1   -1]
    upperBounds = [2049   429   13]
  </ParticleSink>

  <ParticleSink lower1Absorber>
    kind = absorber
    minDim = 2
    lowerBounds = [0   -1   -1]
    upperBounds = [2048   0   13]
  </ParticleSink>

  <ParticleSink upper1Absorber>
    kind = absorber
    minDim = 2
    lowerBounds = [0   428   -1]
    upperBounds = [2048   429   13]
  </ParticleSink>

</Species>


